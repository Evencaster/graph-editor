(this.webpackJsonpgraph_editor_react=this.webpackJsonpgraph_editor_react||[]).push([[0],{22:function(e,t,n){e.exports=n(45)},45:function(e,t,n){"use strict";n.r(t);var r=n(0),i=n.n(r),a=n(19),s=n.n(a),c=n(20),o=n(3),h=n(1),u=n(4),l=n(5),d=n(7),p=n(6),f=function(e){Object(d.a)(n,e);var t=Object(p.a)(n);function n(e){return Object(u.a)(this,n),t.call(this,e)}return Object(l.a)(n,[{key:"handleCreateNewGraph",value:function(){var e={name:prompt("Enter name of graph")};this.props.onGraphCreated(e)}},{key:"handleGraphSelected",value:function(e){this.setState({selectedGraphId:e.id}),this.props.onTabChange(e.id)}},{key:"render",value:function(){var e=this;return i.a.createElement("div",null,this.props.graphs.map((function(t){return i.a.createElement(v,{key:t.id,graph:t,onSelect:e.handleGraphSelected.bind(e),isSelected:e.props.graphId===t.id})})),i.a.createElement("button",{onClick:this.handleCreateNewGraph.bind(this)},"+"))}}]),n}(i.a.Component),v=function(e){Object(d.a)(n,e);var t=Object(p.a)(n);function n(e){return Object(u.a)(this,n),t.call(this,e)}return Object(l.a)(n,[{key:"handleTabSelected",value:function(){this.props.onSelect(this.props.graph)}},{key:"render",value:function(){return i.a.createElement("button",{className:"tab-button",onClick:this.handleTabSelected.bind(this)},this.props.isSelected?i.a.createElement("b",null,this.props.graph.name):this.props.graph.name)}}]),n}(i.a.Component),x=function(e){for(var t=65535&(new Date).getTime();e.includes(t);)t=65535&(new Date).getTime();return t},g="http://127.0.0.1:8000",y={mode:"cors",headers:{"Content-Type":"application/json"}},m=Object.freeze({STROKED:"STROKED",FILLED:"FILLED"}),b=function(e){Object(d.a)(n,e);var t=Object(p.a)(n);function n(e){var r;return Object(u.a)(this,n),(r=t.call(this,e)).state={isDirected:!1,paintingColor:"",paintMode:!1},r.canvas=i.a.createRef(),r.showVertexIds=!0,r.isPainting=!1,r.isDragging=!1,r.draggingOffset={},r.selectedVertex=null,r.clickTimer=null,r.vertexes=r.props.graphs.find((function(e){return e.id===r.props.graphId})).vertexes,r.arcs=r.props.graphs.find((function(e){return e.id===r.props.graphId})).arcs,r}return Object(l.a)(n,[{key:"updateGraphRequest",value:function(){var e=this;fetch(g+"/api/v1/graph/"+this.props.graphId,Object(h.a)({method:"PUT",body:JSON.stringify(this.props.graphs.find((function(t){return t.id===e.props.graphId})))},y)).catch((function(e){return console.log(e)}))}},{key:"adjacencyMatrixRequest",value:function(){fetch(g+"/api/v1/graph/"+this.props.graphId+"/adjacencyMatrix",Object(h.a)({method:"GET"},y)).then((function(e){return e.json()})).catch((function(e){return console.log(e)})).then((function(e){alert(e.matrix.trim())})).catch((function(e){return console.log(e)}))}},{key:"incidenceMatrixRequest",value:function(){fetch(g+"/api/v1/graph/"+this.props.graphId+"/incidenceMatrix",Object(h.a)({method:"GET"},y)).then((function(e){return e.json()})).catch((function(e){return console.log(e)})).then((function(e){alert(e.matrix.trim())})).catch((function(e){return console.log(e)}))}},{key:"eulerianCycleRequest",value:function(){var e=this.vertexes.filter((function(e){return e.selected}))[0]||this.vertexes[0];fetch("".concat(g,"/api/v1/graph/").concat(this.props.graphId,"/eulerianCycle?startedNode=").concat(e.id),Object(h.a)({method:"GET"},y)).then((function(e){return e.text()})).catch((function(e){return console.log(e)})).then((function(e){console.log("Editor.js -> eulerianCycle request: ",e),alert(e)})).catch((function(e){return console.log(e)}))}},{key:"hamiltonianPathRequest",value:function(){var e=this.vertexes.filter((function(e){return e.selected}))[0]||this.vertexes[0];fetch("".concat(g,"/api/v1/graph/").concat(this.props.graphId,"/hamiltonianPath?startedNode=").concat(e.id),Object(h.a)({method:"GET"},y)).then((function(e){return e.text()})).catch((function(e){return console.log(e)})).then((function(e){console.log("Editor.js -> hamiltonianPath request: ",e),alert(e)})).catch((function(e){return console.log(e)}))}},{key:"findDiameterRequest",value:function(){fetch(g+"/api/v1/graph/"+this.props.graphId+"/diameter",Object(h.a)({method:"GET"},y)).then((function(e){return e.json()})).catch((function(e){return console.log(e)})).then((function(e){console.log("Editor.js -> diameter request: ",e),alert(e)})).catch((function(e){return console.log(e)}))}},{key:"findRadiusRequest",value:function(){fetch(g+"/api/v1/graph/"+this.props.graphId+"/radius",Object(h.a)({method:"GET"},y)).then((function(e){return e.json()})).catch((function(e){return console.log(e)})).then((function(e){console.log("Editor.js -> Radius request: ",e),alert(e)})).catch((function(e){return console.log(e)}))}},{key:"findCenterRequest",value:function(){fetch(g+"/api/v1/graph/"+this.props.graphId+"/center",Object(h.a)({method:"GET"},y)).then((function(e){return e.json()})).catch((function(e){return console.log(e)})).then((function(e){console.log("Editor.js -> Center request: ",e),alert(e)})).catch((function(e){return console.log(e)}))}},{key:"planarCheckRequest",value:function(){fetch(g+"/api/v1/graph/"+this.props.graphId+"/planarCheck",Object(h.a)({method:"GET"},y)).then((function(e){return e.json()})).catch((function(e){return console.log(e)})).then((function(e){console.log("Editor.js -> planarCheck request: ",e),e.isPlanar?alert("Graph is planar"):alert("Graph is not planar")})).catch((function(e){return console.log(e)}))}},{key:"isTreeRequest",value:function(){console.log("Editor.js -> isTreeRequest/125 this.props.graphs[0]: ",JSON.stringify(this.props.graphs[0])),fetch(g+"/api/v1/graph/"+this.props.graphId+"/isTree",Object(h.a)({method:"GET"},y)).then((function(e){return e.json()})).catch((function(e){return console.log(e)})).then((function(e){console.log("Editor.js -> isTree request: ",e),e.isTree?alert("Graph is tree"):alert("Graph is not tree")})).catch((function(e){return console.log(e)}))}},{key:"findShortestPathRequest",value:function(){var e=this.vertexes.filter((function(e){return e.selected})).sort((function(e,t){return t.timestamp-e.timestamp}));2===e.length&&fetch("".concat(g,"/api/v1/graph/").concat(this.props.graphId,"/shortestPath?fromNode=").concat(e[0].id,"&toNode=").concat(e[1].id),Object(h.a)({method:"GET"},y)).then((function(e){return e.json()})).catch((function(e){return console.log(e)})).then((function(e){null!==e.path?alert(e.path.map((function(e){return e.id})).join(",")):alert("no path")})).catch((function(e){return console.log(e)}))}},{key:"findAllShortestPathsRequest",value:function(){var e=this.vertexes.filter((function(e){return e.selected})).sort((function(e,t){return t.timestamp-e.timestamp}));2===e.length&&fetch("".concat(g,"/api/v1/graph/").concat(this.props.graphId,"/allShortestPath?fromNode=").concat(e[0].id,"&toNode=").concat(e[1].id),Object(h.a)({method:"GET"},y)).then((function(e){return e.json()})).catch((function(e){return console.log(e)})).then((function(e){null!==e.path?alert(e.paths.map((function(e){return e.map((function(e){return e.id})).join(",")})).join("\n")):alert("no path")})).catch((function(e){return console.log(e)}))}},{key:"findDistance",value:function(){var e=this.vertexes.filter((function(e){return e.selected})).sort((function(e,t){return t.timestamp-e.timestamp}));2===e.length&&fetch("".concat(g,"/api/v1/graph/").concat(this.props.graphId,"/shortestPath?fromNode=").concat(e[0].id,"&toNode=").concat(e[1].id),Object(h.a)({method:"GET"},y)).then((function(e){return e.json()})).catch((function(e){return console.log(e)})).then((function(e){null!==e.path?alert(e.path.map((function(e){return e.id})).length-1):alert("no path")})).catch((function(e){return console.log(e)}))}},{key:"createNewVertex",value:function(e,t){this.vertexes.push({x:e,y:t,id:x(this.vertexes.map((function(e){return e.id}))),name:"",arcs:[],shape:m.STROKED})}},{key:"getArcsFromId",value:function(e){return this.arcs.filter((function(t){return e.some((function(e){return e===t.id}))}))}},{key:"deleteSelectedVertexes",value:function(){var e=this;this.vertexes=this.vertexes.filter((function(e){return!e.selected})),this.props.graphs.find((function(t){return t.id===e.props.graphId})).vertexes=this.vertexes,this.props.graphs.find((function(t){return t.id===e.props.graphId})).arcs=this.arcs,this.updateGraphRequest()}},{key:"createNewArc",value:function(e,t){var n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];0===e.arcs.filter((function(e){return t.arcs.some((function(t){return e===t}))})).length?(this.arcs.push({vertex1:e,vertex2:t,isDirected:n,id:x(this.arcs.map((function(e){return e.id}))),angle12:{sin:(t.y-e.y)/Math.sqrt(Math.pow(t.x-e.x,2)+Math.pow(t.y-e.y,2)),cos:(t.x-e.x)/Math.sqrt(Math.pow(t.x-e.x,2)+Math.pow(t.y-e.y,2))},angle21:{sin:(e.y-t.y)/Math.sqrt(Math.pow(t.x-e.x,2)+Math.pow(t.y-e.y,2)),cos:(e.x-t.x)/Math.sqrt(Math.pow(t.x-e.x,2)+Math.pow(t.y-e.y,2))}}),e.arcs.push(this.arcs[this.arcs.length-1].id),t.arcs.push(this.arcs[this.arcs.length-1].id),this.updateGraphRequest()):alert("exists")}},{key:"handleSwapOrientation",value:function(){var e=this.vertexes.filter((function(e){return e.selected}));if(2===e.length){var t,n=Object(o.a)(this.arcs);try{for(n.s();!(t=n.n()).done;){var r=t.value;r.isDirected&&(r.vertex1===e[0]&&r.vertex2===e[1]?(r.vertex1=e[1],r.vertex2=e[0],this.updateAngles(r)):r.vertex1===e[1]&&r.vertex2===e[0]&&(r.vertex1=e[0],r.vertex2=e[1],this.updateAngles(r)))}}catch(i){n.e(i)}finally{n.f()}}}},{key:"handleDeleteArc",value:function(){var e,t=this.vertexes.filter((function(e){return e.selected}));if(2===t.length)e=t[0].arcs.find((function(e){return t[1].arcs.some((function(t){return t===e}))}));else if(1===t.length){var n,r=Object(o.a)(this.arcs);try{for(r.s();!(n=r.n()).done;){var i=n.value;i.vertex1.id===t[0].id&&i.vertex2.id===t[0].id&&(e=i.id)}}catch(a){r.e(a)}finally{r.f()}}e&&(this.arcs=this.arcs.filter((function(t){return t.id!==e})))}},{key:"updateAngles",value:function(e){e.angle12={sin:(e.vertex2.y-e.vertex1.y)/Math.sqrt(Math.pow(e.vertex2.x-e.vertex1.x,2)+Math.pow(e.vertex2.y-e.vertex1.y,2)),cos:(e.vertex2.x-e.vertex1.x)/Math.sqrt(Math.pow(e.vertex2.x-e.vertex1.x,2)+Math.pow(e.vertex2.y-e.vertex1.y,2))},e.angle21={sin:(e.vertex1.y-e.vertex2.y)/Math.sqrt(Math.pow(e.vertex2.x-e.vertex1.x,2)+Math.pow(e.vertex2.y-e.vertex1.y,2)),cos:(e.vertex1.x-e.vertex2.x)/Math.sqrt(Math.pow(e.vertex2.x-e.vertex1.x,2)+Math.pow(e.vertex2.y-e.vertex1.y,2))}}},{key:"handleMouseDown",value:function(e){var t=this;this.state.paintMode?this.isPainting=!0:(this.selectedVertex=this.vertexes.find((function(t){return Math.sqrt(Math.pow(e.x-t.x,2)+Math.pow(e.y-t.y,2))<=10})),this.selectedVertex&&(this.draggingOffset.X=e.x-this.selectedVertex.x,this.draggingOffset.Y=e.y-this.selectedVertex.y,this.isDragging=!0,this.clickTimer=!0,setTimeout((function(){return t.clickTimer=!1}),300)))}},{key:"handleMouseMove",value:function(e){var t=this;this.state.paintMode&&this.isPainting?(this.vertexes.filter((function(t){return Math.sqrt(Math.pow(e.x-t.x,2)+Math.pow(e.y-t.y,2))<=47})).forEach((function(e){return e.color=t.state.paintingColor})),this.arcs.filter((function(t){return Math.sqrt(Math.pow(e.x-(t.vertex1.x+t.vertex2.x)/2,2)+Math.pow(e.y-(t.vertex1.y+t.vertex2.y)/2,2))<=37})).forEach((function(e){return e.color=t.state.paintingColor}))):!0===this.isDragging&&(this.selectedVertex.x=e.x-this.draggingOffset.X,this.selectedVertex.y=e.y-this.draggingOffset.Y,this.getArcsFromId(this.selectedVertex.arcs).forEach(this.updateAngles))}},{key:"handleMouseUp",value:function(e){this.state.paintMode&&this.isPainting?this.isPainting=!1:!0===this.isDragging?(this.isDragging=!1,this.selectedVertex=this.clickTimer&&this.vertexes.find((function(t){return Math.sqrt(Math.pow(e.x-t.x,2)+Math.pow(e.y-t.y,2))<=10})),this.selectedVertex&&(this.selectedVertex.selected=!this.selectedVertex.selected,this.selectedVertex.selected&&(this.selectedVertex.timestamp=(new Date).getTime()))):this.vertexes.filter((function(e){return e.selected})).forEach((function(e){return e.selected=!1})),this.updateGraphRequest()}},{key:"handleDoubleClick",value:function(e){this.createNewVertex(e.x,e.y)}},{key:"handleDeleteVertex",value:function(){this.deleteSelectedVertexes()}},{key:"handleNewArc",value:function(e){var t=this.vertexes.filter((function(e){return e.selected}));2===t.length?this.createNewArc(t[0],t[1],e):1===t.length&&this.createNewArc(t[0],t[0],e)}},{key:"handleVertexCount",value:function(){alert("Vertexes count: ".concat(this.vertexes.length))}},{key:"handleArcCount",value:function(){alert("Arcs count: ".concat(this.arcs.length))}},{key:"handleVertexPower",value:function(){var e=this,t=this.vertexes.filter((function(e){return e.selected}));0!==t.length?alert("Selected vertexes power: ".concat(t.reduce((function(e,t){return e+t.arcs.length}),0))):alert("All vertexes power: ".concat(this.vertexes.reduce((function(t,n){return t+e.getArcsFromId(n.arcs).length}),0)))}},{key:"handleSwitchShape",value:function(){this.vertexes.filter((function(e){return e.selected})).forEach((function(e){return e.shape===m.STROKED?e.shape=m.FILLED:e.shape=m.STROKED}))}},{key:"handleChangeName",value:function(){this.vertexes.find((function(e){return e.selected})).name=prompt("Enter name: ")}},{key:"handlePaintMode",value:function(){this.setState({paintMode:!this.state.paintMode})}},{key:"handleColorChange",value:function(e){this.setState({paintingColor:e.target.value})}},{key:"checkArcs",value:function(){var e=this;this.arcs=this.arcs.filter((function(t){return e.vertexes.find((function(e){return t.vertex1.id===e.id}))&&e.vertexes.find((function(e){return t.vertex2.id===e.id}))})),this.props.graphs.find((function(t){return t.id===e.props.graphId})).arcs=this.arcs}},{key:"drawVertexes",value:function(){if(this.vertexes.length){var e,t=Object(o.a)(this.vertexes);try{for(t.s();!(e=t.n()).done;){var n=e.value;this.ctx.beginPath(),this.ctx.lineWidth=5,n.selected?this.ctx.strokeStyle=this.ctx.fillStyle="orange":this.ctx.strokeStyle=this.ctx.fillStyle=n.color||"black",this.ctx.arc(n.x,n.y,10,0,2*Math.PI),this.ctx.stroke(),n.shape===m.FILLED&&this.ctx.fill(),this.ctx.fillStyle="black",this.ctx.font="12px Arial",this.showVertexIds&&this.ctx.fillText(n.id,n.x+15,n.y+15),this.ctx.font=n.name&&"14px Arial",n.name&&this.ctx.fillText(n.name,n.x-15,n.y-15)}}catch(r){t.e(r)}finally{t.f()}}}},{key:"drawArcs",value:function(){var e=this;if(this.arcs.length){var t,n=Object(o.a)(this.arcs);try{var r=function(){var n=t.value;n.vertex1=e.vertexes.find((function(e){return e.id===n.vertex1.id})),n.vertex2=e.vertexes.find((function(e){return e.id===n.vertex2.id})),e.ctx.strokeStyle=n.color||"black",e.ctx.fillStyle=n.color||"black",e.ctx.lineWidth=1;var r=!1,i=void 0,a=void 0;if(e.ctx.beginPath(),n.vertex1===n.vertex2?(r=!0,i={x:n.vertex1.x,y:n.vertex1.y+10},a={x:n.vertex2.x,y:n.vertex2.y+10},n.vertex1&&n.vertex2&&e.ctx.moveTo(i.x,i.y),n.vertex1&&n.vertex2&&e.ctx.bezierCurveTo(i.x+25,i.y+50,i.x-25,i.y+50,a.x,a.y)):(i={x:n.vertex1.x+10*n.angle12.cos,y:n.vertex1.y+10*n.angle12.sin},a={x:n.vertex2.x+10*n.angle21.cos,y:n.vertex2.y+10*n.angle21.sin},n.vertex1&&n.vertex2&&e.ctx.moveTo(i.x,i.y),n.vertex1&&n.vertex2&&e.ctx.lineTo(a.x,a.y)),e.ctx.stroke(),n.isDirected){var s=Math.atan2(a.y-i.y,a.x-i.x);r&&(s=-3.7*Math.PI/6);var c=10;e.ctx.beginPath(),e.ctx.moveTo(a.x,a.y),e.ctx.lineTo(a.x-c*Math.cos(s-Math.PI/7),a.y-c*Math.sin(s-Math.PI/7)),e.ctx.lineTo(a.x-c*Math.cos(s+Math.PI/7),a.y-c*Math.sin(s+Math.PI/7)),e.ctx.lineTo(a.x,a.y),e.ctx.lineTo(a.x-c*Math.cos(s-Math.PI/7),a.y-c*Math.sin(s-Math.PI/7)),e.ctx.fill()}e.showVertexIds&&e.ctx.fillText(n.id,(n.vertex1.x+n.vertex2.x)/2,(n.vertex1.y+n.vertex2.y)/2)};for(n.s();!(t=n.n()).done;)r()}catch(i){n.e(i)}finally{n.f()}}}},{key:"update",value:function(e,t){this.checkArcs(),this.ctx.clearRect(0,0,e,t),this.drawVertexes(),this.drawArcs()}},{key:"componentDidMount",value:function(){var e=this;this.canvas.current.onselectstart=function(){return!1},this.ctx=this.canvas.current.getContext("2d"),setInterval((function(){return e.update(e.canvas.current.width,e.canvas.current.height)}),15),setInterval(this.updateGraphReques,500)}},{key:"componentDidUpdate",value:function(){var e=this;this.vertexes=this.props.graphs.find((function(t){return t.id===e.props.graphId})).vertexes,this.arcs=this.props.graphs.find((function(t){return t.id===e.props.graphId})).arcs}},{key:"getMouseEventWithOffset",value:function(e,t){var n=t.getBoundingClientRect();return{x:e.clientX-n.left,y:e.clientY-n.top}}},{key:"render",value:function(){var e=this;return i.a.createElement("div",null,i.a.createElement("canvas",{id:"canvas",width:"1200",height:"500",style:this.state.paintMode?{cursor:"url(paint_cursor.png) 38 37, auto",border:"1px solid #d3d3d3"}:{cursor:"auto",border:"1px solid #d3d3d3"},ref:this.canvas,onMouseDown:function(t){return e.handleMouseDown(e.getMouseEventWithOffset(t,e.canvas.current))},onMouseMove:function(t){return e.handleMouseMove(e.getMouseEventWithOffset(t,e.canvas.current))},onMouseUp:function(t){return e.handleMouseUp(e.getMouseEventWithOffset(t,e.canvas.current))},onDoubleClick:function(t){return e.handleDoubleClick(e.getMouseEventWithOffset(t,e.canvas.current))}}),i.a.createElement("button",{onClick:function(){return e.handleNewArc(!0)}},"Oriented Arc"),i.a.createElement("button",{onClick:function(){return e.handleNewArc(!1)}},"Nooreinted Arc"),i.a.createElement("button",{onClick:this.handleSwapOrientation.bind(this)},"Swap orientation"),i.a.createElement("button",{onClick:this.handleDeleteArc.bind(this)},"Delete arc"),i.a.createElement("button",{onClick:this.handleChangeName.bind(this)},"Name"),i.a.createElement("button",{onClick:this.handleSwitchShape.bind(this)},"Switch vertex shape"),i.a.createElement("button",{onClick:this.handleDeleteVertex.bind(this)},"Delete vertex"),i.a.createElement("button",{onClick:this.handlePaintMode.bind(this)},"Paint"),i.a.createElement("input",{type:"text",placeholder:"#000000",onChange:this.handleColorChange.bind(this),value:this.state.paintingColor}),i.a.createElement("button",{onClick:function(){return e.showVertexIds=!e.showVertexIds}},"Show vertexes ids"),i.a.createElement("button",{onClick:this.handleVertexCount.bind(this)},"Vertexes count"),i.a.createElement("button",{onClick:this.handleArcCount.bind(this)},"Arcs count"),i.a.createElement("button",{onClick:this.handleVertexPower.bind(this)},"Vertex power"),i.a.createElement("button",{onClick:this.findShortestPathRequest.bind(this)},"Find shortest path"),i.a.createElement("button",{onClick:this.findAllShortestPathsRequest.bind(this)},"Find all shortest paths"),i.a.createElement("button",{onClick:this.findDistance.bind(this)},"Find distance"),i.a.createElement("button",{onClick:this.adjacencyMatrixRequest.bind(this)},"Adjacency matrix"),i.a.createElement("button",{onClick:this.incidenceMatrixRequest.bind(this)},"Incidence matrix"),i.a.createElement("button",{onClick:this.eulerianCycleRequest.bind(this)},"Eulerian cycle"),i.a.createElement("button",{onClick:this.hamiltonianPathRequest.bind(this)},"Hamiltonian Path"),i.a.createElement("button",{onClick:this.findDiameterRequest.bind(this)},"Find diameter"),i.a.createElement("button",{onClick:this.findRadiusRequest.bind(this)},"Find radius"),i.a.createElement("button",{onClick:this.findCenterRequest.bind(this)},"Find center"),i.a.createElement("button",{onClick:this.planarCheckRequest.bind(this)},"Planar check"),i.a.createElement("button",{onClick:this.isTreeRequest.bind(this)},"Is tree"))}}]),n}(i.a.Component),k=(n(27),function(e){if(void 0===e)throw new Error("Object is undefined");return JSON.parse(JSON.stringify(e))}),M=function(e){Object(d.a)(n,e);var t=Object(p.a)(n);function n(e){var r;return Object(u.a)(this,n),(r=t.call(this,e)).isGraphListReady=!1,r.isComponentMounted=!1,r.getGraphList(),r.state={graphs:[],graphId:null},r}return Object(l.a)(n,[{key:"componentDidMount",value:function(){this.isComponentMounted=!0,this.isGraphListReady&&this.graphList&&this.setState({graphs:this.graphList,graphId:this.graphList[0].id})}},{key:"getGraphList",value:function(){var e=this;fetch(g+"/api/v1/graph/list",Object(h.a)({method:"GET"},y)).then((function(e){return e.json()})).catch((function(e){return console.log(e)})).then((function(t){var n=e.prepareGraphList(t);e.isComponentMounted?e.setState({graphs:n,graphId:n[0].id}):(e.isGraphListReady=!0,e.graphList=n)})).catch((function(e){return console.log(e)}))}},{key:"prepareGraphList",value:function(e){var t=this,n=e.map((function(e){return t.prepareGraph(e)})).sort((function(e,t){return t.timestamp-e.timestamp}));if(void 0===n)throw new Error("preparedGraphList is undefined");return k(n)}},{key:"prepareGraph",value:function(e){var t,n=Object(o.a)(e.vertexes);try{for(n.s();!(t=n.n()).done;){var r=t.value;r.arcs=[];var i,a=Object(o.a)(e.arcs);try{for(a.s();!(i=a.n()).done;){var s=i.value;s.vertex1.id===r.id&&s.vertex2.id===r.id?(r.arcs.push(s.id),r.arcs.push(s.id)):s.vertex1.id!==r.id&&s.vertex2.id!==r.id||r.arcs.push(s.id)}}catch(c){a.e(c)}finally{a.f()}}}catch(c){n.e(c)}finally{n.f()}return k(e)}},{key:"onGraphCreated",value:function(e){var t=this;e.vertexes=[],e.arcs=[],e.timestamp=(new Date).getTime(),fetch(g+"/api/v1/graph",Object(h.a)({method:"POST",body:JSON.stringify(e)},y)).then((function(e){return e.json()})).catch((function(e){return console.log(e)})).then((function(n){e.id=n.id,t.setState({graphs:[e].concat(Object(c.a)(t.state.graphs)),graphId:e.id})})).catch((function(e){return console.log(e)}))}},{key:"render",value:function(){var e=this;return i.a.createElement("div",null,i.a.createElement(f,{onTabChange:function(t){return e.setState({graphId:t})},onGraphCreated:function(t){return e.onGraphCreated(t)},graphs:this.state.graphs,graphId:this.state.graphId}),0!==this.state.graphs.length&&i.a.createElement(b,{graphId:this.state.graphId,graphs:this.state.graphs}))}}]),n}(i.a.Component);s.a.render(i.a.createElement(M,null),document.getElementById("root"))}},[[22,1,2]]]);
//# sourceMappingURL=main.c9e1f628.chunk.js.map